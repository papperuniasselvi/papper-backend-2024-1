name: Build and Deploy
on:
  release:
    types: [created]
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract release tag
        id: extract_tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Build Docker image
        run: |
          docker build -t papper-api:${{ steps.extract_tag.outputs.TAG }} -t papper-api:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker tag papper-api:${{ steps.extract_tag.outputs.TAG }} lamarques/papper-api:${{ steps.extract_tag.outputs.TAG }}
          docker tag papper-api:latest lamarques/papper-api:latest
          docker push lamarques/papper-api:${{ steps.extract_tag.outputs.TAG }}
          docker push lamarques/papper-api:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Configure SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" >>  ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
      - name: Deploy to server
        run: sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_SERVER }} "docker stop papper-api-container && docker container prune -f && docker image prune -f && docker pull lamarques/papper-api:latest && docker run -d -p 8080:8080 --env-file=/home/papper/secrets/paper.env.prod --name papper-api-container --network bubble lamarques/papper-api:latest"

